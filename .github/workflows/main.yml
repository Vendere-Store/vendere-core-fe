name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ensure this is your default branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Docker registry
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: sh0n3/vendere-core-fe:latest
#
#      - name: Install kubectl
#        uses: azure/setup-kubectl@v1

      - name: Setup SSH Tunnel
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER }}  # Assume SSH_SERVER is the public IP or hostname
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            # Save the SSH key to a temporary file
            echo "${{ secrets.SSH_KEY }}" > /tmp/ssh_key
            chmod 600 /tmp/ssh_key
            
            # Set up the SSH tunnel using the temporary key file
            ssh -i /tmp/ssh_key -f -L 8443:192.168.49.2:8443 -N -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }} &
            sleep 10  # Wait to ensure the tunnel is set up
            
            # Check if the tunnel is up
            if nc -z localhost 8443; then
              echo "SSH tunnel is up and running on localhost:8443"
            else
              echo "Failed to establish SSH tunnel"
              exit 1
            fi
            
            # Clean up the key file
            rm /tmp/ssh_key

      - name: Set up Minikube kubectl context
        run: |
          kubectl config set-cluster minikube --server=https://localhost:8443 --certificate-authority=${{ secrets.CA_CERT }} --embed-certs=true
          kubectl config set-credentials minikube-user --client-certificate=${{ secrets.CLIENT_CERT }} --client-key=${{ secrets.CLIENT_KEY }} --embed-certs=true
          kubectl config set-context minikube --cluster=minikube --user=minikube-user
          kubectl config use-context minikube
    

      - name: Deploy Helm chart
        uses: azure/setup-helm@v1
        with:
          version: 'latest'

      - name: Update Helm dependencies
        run: helm dependency update ./helm/vendere-products-fe

      - name: Deploy to Kubernetes
        run: helm upgrade --install vendere-products-fe ./helm/vendere-products-fe --namespace default --create-namespace
